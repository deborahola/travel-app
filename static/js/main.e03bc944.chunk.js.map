{"version":3,"sources":["components/navbar/styles.js","components/navbar/navbar.jsx","components/list/styles.js","components/list/list.jsx","components/details/styles.js","components/details/details.jsx","App.js","api_src/index.js","index.js"],"names":["makeStyles","title","display","inputRoot","color","toolbar","justifyContent","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Navbar","classes","useStyles","open","setOpen","React","useState","_jsx","AppBar","background","children","_jsxs","Toolbar","className","Typography","variant","Button","type","onClick","handleOpen","Modal","onClose","handleClose","Box","sx","id","component","mt","formControl","margin","minWidth","marginBottom","container","padding","list","height","overflow","List","_ref","available","award","setAward","setAvailable","setType","setRating","rating","price","setPrice","FormControl","InputLabel","Select","value","onChange","e","target","MenuItem","loading","alignItems","cusine","subtitle","marginTop","spacing","Details","_refProp$current","places","selected","refProp","current","scrollIntoView","behavior","block","console","log","Grid","map","place","i","_place$cuisine","item","xs","Card","elevation","backgroundColor","CardMedia","image","photo","images","large","url","name","CardContent","gutterBottom","my","Rating","Number","readOnly","num_reviews","cuisine","_ref2","Chip","size","label","address","phone","CardActions","window","website","App","filteredPlaces","setFilteredPlaces","setPlaces","useEffect","async","data","axios","get","concat","params","location_id","headers","error","getPlacesData","then","filter","length","filtPlace","String","is_closed","_place$awards","awards","_place$awards2","price_level","CssBaseline","md","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e03bc944.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  title: {\n    display: 'block',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  toolbar: {\n    display: 'flex', justifyContent: 'space-between',\n  },\n}));","import {AppBar, Toolbar, Modal, Box, Typography, Button} from '@material-ui/core'\nimport React from 'react'\nimport useStyles from './styles';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: '#3a3153',\n    border: '2px solid #000',\n    color: 'white',\n    boxShadow: 24,\n    p: 4,\n  };\nconst Navbar = () => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    return(\n        <AppBar position = \"static\" style={{ background: '#3a3153' }}>\n            <Toolbar className = {classes.toolbar}>\n                <Typography variant =\"h5\" className = {classes.title}>\n                    Travel Haven\n                </Typography>\n                <Button variant=\"contained\" type=\"button\" onClick={handleOpen}>\n                    Help\n                </Button>\n                <Modal\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                >\n                    <Box sx={style}>\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        What is the purpose of this application?\n                        </Typography>\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        To help users find a tourist location based on a set of criteria! \n                        </Typography>\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        How do I use this application? \n                        </Typography>\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                        You can choose between restaurants or attractions on the left menu. From there, you can specify what types of attractions/restaurants you want to see based on price point, rating, awards, and more! All the available attractions are listed on the right of your screen. \n                        </Typography>\n                    </Box>\n                </Modal>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Navbar","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  formControl: {\n    margin: \"10px\", minWidth: 120, marginBottom: '30px',\n  },\n  container: {\n    padding: '25px',\n  },\n  marginBottom: {\n    marginBottom: '30px',\n  },\n  list: {\n    height: '75vh', overflow: 'auto',\n  },\n}));","import React from 'react'\nimport { Typography, InputLabel, MenuItem, FormControl, Select } from '@material-ui/core'\nimport useStyles from './styles'\n//holds all the variables that will be used to filter the list\nconst List = ({available, award, setAward, setAvailable, setType, type, setRating, rating, price, setPrice}) => {\n    const classes = useStyles()\n    return(\n        <div className = {classes.container}>\n            <Typography variant = \"h4\">Filter:</Typography>\n            <FormControl className={classes.formControl}>\n                <InputLabel id = \"type\">Type</InputLabel>\n                {/* Extracts what location type the user wants the list to be filtered by. */}\n                <Select value={type} onChange = {(e)=> setType(e.target.value)}>\n                    <MenuItem value = \"attractions\">Attractions</MenuItem>\n                    <MenuItem value = \"restaurants\">Restaurants</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Price</InputLabel>\n                {/* Extracts what price the user wants the list to be filtered by. */}\n                <Select id = \"price\" value = {price} onChange = {(e)=> setPrice(e.target.value)}>\n                    <MenuItem value = \"0\">All</MenuItem>\n                    <MenuItem value = \"1\">Cheap</MenuItem>\n                    <MenuItem value = \"2\">Expensive</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Availability</InputLabel>\n                {/* Extracts the availability the user wants the list to be filtered by. */}\n                <Select id = \"available\" value = {available} onChange = {(e)=> setAvailable(e.target.value)}>\n                    <MenuItem value = \"0\">All</MenuItem>\n                    <MenuItem value = \"false\">Open</MenuItem>\n                    <MenuItem value = \"true\">Closed</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Awards</InputLabel>\n                {/* Extracts the # of awards the user wants the list to be filtered by. */}\n                <Select id = \"award\" value = {award} onChange = {(e)=> setAward(e.target.value)}>\n                    <MenuItem value = \"0\">All</MenuItem>\n                    <MenuItem value = \"1\">Awarded</MenuItem>\n                    <MenuItem value = \"5\">Well Awarded</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Rating</InputLabel>\n                {/* Extracts the rating the user wants the list to be filtered by. */}\n                <Select id = \"rating\" value = {rating} onChange = {(e)=> setRating(e.target.value)}>\n                    <MenuItem value = \"0\">All</MenuItem>\n                    <MenuItem value = \"3\">3+ Stars</MenuItem>\n                    <MenuItem value = \"4\">4+ Stars</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    )\n}\n\nexport default List","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  formControl: {\n    margin: \"10px\", minWidth: 120, marginBottom: '30px',\n  },\n  loading: {\n    height: '600px', display: 'flex', justifyContent: 'center', alignItems: 'center',\n  },\n  container: {\n    padding: '25px',\n  },\n  marginBottom: {\n    marginBottom: '30px',\n  },\n  list: {\n    height: '75vh',\n    padding: \"20px\"\n  },\n  cusine: {\n    margin: '5px 5px 5px 0',\n  },\n  subtitle: {\n    display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginTop: '10px',\n  },\n  spacing: {\n    display: 'flex', alignItems: 'center', justifyContent: 'space-between',\n  }\n}));","import React from 'react'\nimport useStyles from './styles.js';\nimport {Grid, Box, Typography, Button, Card, CardMedia, CardContent, CardActions, Chip} from '@material-ui/core'\nimport Rating from '@material-ui/lab/Rating'\nconst Details = ({places, selected, refProp}) => {\n    const classes = useStyles()  \n    if (selected) refProp?.current?.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    console.log(places)\n    return(\n    <Grid container spacing={2} className={classes.list}>\n        {places?.map((place, i) => (\n\n            <Grid item key={i} xs={4}>\n            <Card elevation={6} style = {{height: 800, color: \"white\", backgroundColor: '#3a3153'}}>\n                <CardMedia\n                    style={{ height: 350 }}\n                    image={place.photo ? place.photo.images.large.url : 'https://www.foodserviceandhospitality.com/wp-content/uploads/2016/09/Restaurant-Placeholder-001.jpg'}\n                    title={place.name}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\">{place.name ? place.name : \"Coming soon...\"}</Typography>\n                    <Box display=\"flex\" justifyContent=\"space-between\" my={2}>\n                    <Rating name=\"read-only\" value={Number(place.rating)} readOnly />\n                    <Typography component=\"legend\">{place.num_reviews ? place.num_reviews : \"No\"} review{place.num_reviews > 1 && 's'}</Typography>\n                    </Box>\n                    {place?.cuisine?.map(({ name }) => (\n                    <Chip key={name} size=\"small\" label={name} className={classes.cusine} />\n                    ))}\n                    {place.address && (\n                    <Typography gutterBottom variant=\"body2\" color=\"white\" className={classes.subtitle}>\n                        {place.address}\n                    </Typography>\n                    )}\n                    {place.phone && (\n                    <Typography variant=\"body2\" color=\"white\" className={classes.spacing}>\n                        {place.phone}\n                    </Typography>\n                    )}\n                </CardContent>\n                <CardActions>\n                    <Button variant=\"contained\" size=\"small\" color=\"white\" onClick={() => window.open(place.website, '_blank')}>\n                    Website\n                    </Button>\n                </CardActions>\n                </Card>\n            </Grid>\n        ))}\n    </Grid>\n    )\n}\n\nexport default Details","import React, {useState, useEffect} from 'react'; \nimport { CssBaseline, Grid } from '@material-ui/core';\nimport Navbar from './components/navbar/navbar'\nimport List from './components/list/list'\nimport Details from './components/details/details'\nimport {getPlacesData} from './api_src'\nconst App = () => {\n    //These are all the variables that will be populated in list.jsx. It will be used to filter the array of places.\n    const [type, setType] = useState('restaurants');\n    const [rating, setRating] = useState('');\n    const [award, setAward] = useState('');\n    const [price, setPrice] = useState('')\n    const [available, setAvailable] = useState('')\n    const [filteredPlaces, setFilteredPlaces] = useState([]);\n    const[places, setPlaces] = useState([])\n    //Filters through places array and returns the filtered array depending on the type (restaurant or attraction)\n    useEffect(() => {\n        getPlacesData(type)\n            .then((data) => {\n                setPlaces(data.filter((place) => place.name && place.num_reviews > 0));\n                console.log(data)\n                setFilteredPlaces([]);\n                setPlaces(data)\n            })\n    }, [type])\n    // Check the length of filteredPlaces b/c to save the user steps, we need to filter from the filteredPlaces array\n    // instead of the regular places array. If the filteredPlaces array is empty, we filter through the original places \n    // array and set it to filteredPlaces\n\n    //Filters through the places array and returns the filtered array with the given rating. \n    useEffect(() => {\n        if(filteredPlaces.length === 0) {\n            console.log('hi')\n            const filtPlace= places.filter((place) => place.rating >= rating) \n            setFilteredPlaces(filtPlace)\n        } else {\n            const filtPlace = filteredPlaces.filter((place) => place.rating >= rating) \n            setFilteredPlaces(filtPlace)\n        }\n        // const filteredPlaces = places.filter((place) => Number(place.rating) > rating)\n        // setFilteredPlaces(filteredPlaces)\n    }, [rating])\n    //Filters through the places array and returns the filtered array with the given availability. \n    useEffect(() => {\n        if(filteredPlaces.length === 0) {\n            const filtPlace= places.filter((place) => String(place.is_closed) == available) \n            setFilteredPlaces(filtPlace)\n        } else {\n            const filtPlace = filteredPlaces.filter((place) => String(place.is_closed) == available) \n            setFilteredPlaces(filtPlace)\n        }\n    }, [available])\n    //Filters through the places array and returns the filtered array considering the given award\n    useEffect(() => {\n        if(filteredPlaces.length === 0) {\n            const filtPlace = places.filter((place) => place?.awards?.length > award) \n            setFilteredPlaces(filtPlace)\n        } else {\n            const filtPlace = filteredPlaces.filter((place) => place?.awards?.length > award) \n            setFilteredPlaces(filtPlace)\n        }\n        // const filteredPlaces = places.filter((place) => place?.awards?.length > award)\n        // setFilteredPlaces(filteredPlaces)\n    }, [award])\n    //Filters through the places array and returns the filtered array considering the given price\n    useEffect(() => {\n        if(filteredPlaces.length === 0) {\n            if (price == \"1\") {\n                const filtPlace = places.filter((place) => (place.price_level == \"$\" || place.price_level == \"$$ - $$$\"))\n                setFilteredPlaces(filtPlace)\n            } else if (price == \"2\") { \n                const filtPlace = places.filter((place) => (place.price_level == \"$$$$\" || place.price_level == \"$$$$$\"))\n                setFilteredPlaces(filtPlace)\n            } else {\n                setFilteredPlaces(places)\n            }\n        } else {\n            if (price == \"1\") {\n                const filtPlace = filteredPlaces.filter((place) => (place.price_level == \"$\" || place.price_level == \"$$ - $$$\"))\n                setFilteredPlaces(filtPlace)\n            } else if (price == \"2\") { \n                const filtPlace = filteredPlaces.filter((place) => (place.price_level == \"$$$$\" || place.price_level == \"$$$$$\"))\n                setFilteredPlaces(filtPlace)\n            } else {\n                setFilteredPlaces(places)\n            }\n        }\n\n\n    }, [price])\n\n    //This displays all the components of the application\n    return(\n        <div>\n            <CssBaseline/>\n            <Navbar/>\n            <Grid container spacing={3} style={{ width: '100%', color: '#3a3153'}}>\n                <Grid item xs={12} md={4}>\n                    <List \n                        type={type}\n                        places={filteredPlaces.length ? filteredPlaces : places}\n                        setType={setType}\n                        rating = {rating}\n                        setRating = {setRating}\n                        price = {price}\n                        setPrice = {setPrice}\n                        available = {available}\n                        setAvailable = {setAvailable}\n                        award = {award}\n                        setAward = {setAward}\n                    />\n                </Grid>\n                <Grid item xs={12} md={8}>\n                    <Details \n                        places={filteredPlaces.length ? filteredPlaces : places}\n                        type={type}\n                        rating = {rating}\n                        setRating = {setRating}\n                        setType={setType}\n                        price = {price}\n                        setPrice = {setPrice}\n                        available = {available}\n                        setAvailable = {setAvailable}\n                        award = {award}\n                        setAward = {setAward}\n                        />    \n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default App;","import axios from \"axios\";\n\nexport const getPlacesData = async(type) => {\n\n    try {\n        const {data: {data}} = await axios.get(`https://travel-advisor.p.rapidapi.com/${type}/list`, {\n              params: {\n                location_id: '60898'\n              },\n              headers: {\n                'x-rapidapi-host': 'travel-advisor.p.rapidapi.com',\n                'x-rapidapi-key': 'f92a96c452mshf765c45ffec9e86p13d8c8jsn705c0cb416d7'\n              }\n            })\n\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}